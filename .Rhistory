dtick = 0.05,
ticklen = 5,
tickwidth = 2)
ggplot(data=fulldataset, aes(x=epoch, y=f1T)) + geom_line(color="red")
ggplot(data=fulldataset, aes(x=epoch, y=f2T)) + geom_line(color="red")
ggplot(data=fulldataset, aes(x=epoch, y=f3T)) + geom_line(color="red")
ggplot(data=fulldataset, aes(x=epoch, y=f1V)) + geom_line(color="blue")
ggplot(data=fulldataset, aes(x=epoch, y=f2V)) + geom_line(color="blue")
ggplot(data=fulldataset, aes(x=epoch, y=f3V)) + geom_line(color="blue")
}
k <- 7
p1 <- plotGridRes3("grid_coarse", "mse", k)
p2 <-  plotGridRes3("grid_coarse", "mee", k)
grid.arrange(p1, p2, ncol=2)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "avgT",  "f1V", "f2V", "f3V", "avgV")
fulldataset <- melt(fulldataset)
xax <- a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.05,
ticklen = 5,
tickwidth = 2)
ggplot(fulldataset, aes(x=epoch, y=f1T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f2T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f3T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f1V)) + geom_line(color="blue")
ggplot(fulldataset, aes(x=epoch, y=f2V)) + geom_line(color="blue")
ggplot(fulldataset, aes(x=epoch, y=f3V)) + geom_line(color="blue")
}
k <- 7
p1 <- plotGridRes3("grid_coarse", "mse", k)
p2 <-  plotGridRes3("grid_coarse", "mee", k)
grid.arrange(p1, p2, ncol=2)
plotGridRes3("grid_coarse", "mse", k)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset <- melt(fulldataset)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "avgT",  "f1V", "f2V", "f3V", "avgV")
xax <- a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.05,
ticklen = 5,
tickwidth = 2)
ggplot(fulldataset, aes(x=epoch, y=f1T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f2T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f3T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f1V)) + geom_line(color="blue")
ggplot(fulldataset, aes(x=epoch, y=f2V)) + geom_line(color="blue")
ggplot(fulldataset, aes(x=epoch, y=f3V)) + geom_line(color="blue")
}
plotGridRes3("grid_coarse", "mse", k)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset <- melt(fulldataset[, 2:])
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "avgT",  "f1V", "f2V", "f3V", "avgV")
xax <- a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.05,
ticklen = 5,
tickwidth = 2)
ggplot(fulldataset, aes(x=epoch, y=f1T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f2T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f3T)) + geom_line(color="red")
ggplot(fulldataset, aes(x=epoch, y=f1V)) + geom_line(color="blue")
ggplot(fulldataset, aes(x=epoch, y=f2V)) + geom_line(color="blue")
ggplot(fulldataset, aes(x=epoch, y=f3V)) + geom_line(color="blue")
}
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epoch, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset <- melt(fulldataset)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "avgT",  "f1V", "f2V", "f3V", "avgV")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f2T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f3T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f1V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f2V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f3V), color="blue")
}
k <- 7
p1 <- plotGridRes3("grid_coarse", "mse", k)
p2 <-  plotGridRes3("grid_coarse", "mee", k)
grid.arrange(p1, p2, ncol=2)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epoch, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "avgT",  "f1V", "f2V", "f3V", "avgV")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f2T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f3T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f1V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f2V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f3V), color="blue")
}
plotGridRes3("grid_coarse", "mse", k)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:4], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 5:7], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f1V",  "f2V", "f3V")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f2T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f3T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f1V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f2V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f3V), color="blue")
}
plotGridRes3("grid_coarse", "mse", k)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:4], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 5:7], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f1V",  "f2V", "f3V")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f2T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f3T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f1V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f2V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f3V), color="blue") +
x_lab('# epoch') + y_lab(toupper(errname))
}
plotGridRes3("grid_coarse", "mse", k)
plotGridRes3 <- function(basename, errname, index) {
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:4], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 5:7], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f1V",  "f2V", "f3V")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f2T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f3T), color="red") +
geom_line(data=fulldataset, aes(x=epoch, y=f1V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f2V), color="blue") +
geom_line(data=fulldataset, aes(x=epoch, y=f3V), color="blue") +
xlab('# epoch') + ylab(toupper(errname))
}
plotGridRes3("grid_coarse", "mse", k)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
source('~/Master/ML/Prj/NeuralNetworksSimulator/scripts/plot_data.r', echo=TRUE)
pz1 <- p1 + coord_cartesian(xlim = c(100,1000),ylim= c(0,5))
pz2 <- p2 + coord_cartesian(xlim = c(100,1000),ylim= c(0,5))
pdf("/home/caos/Master/ML/report/plots/cup/final_zoomed.pdf", width = 16, height = 8)
grid.arrange(pz1, pz2, ncol=2)
dev.off()
basename="final"
errname="mee"
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train.csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val.csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(trainMSE, V1 == 3, select=c(V2, V3)),
subset(trainMSE, V1 == 4, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 3, select=c(V2, V3)),
subset(valMSE, V1 == 4, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5, V3.6, V3.7, V3.8, V3.9))
fulldataset$avgT <- apply(fulldataset[, 2:6], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 7:9], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:6], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 7:9], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f4T", "f5T", "f1V",  "f2V", "f3V","f4V", "f5V", "avgT", "avgV")
View(fulldataset)
View(fulldataset)
errname="mse"
basename="final"
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train.csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val.csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(trainMSE, V1 == 3, select=c(V2, V3)),
subset(trainMSE, V1 == 4, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 3, select=c(V2, V3)),
subset(valMSE, V1 == 4, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5, V3.6, V3.7, V3.8, V3.9))
fulldataset$avgT <- apply(fulldataset[, 2:6], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 7:9], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:6], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 7:9], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f4T", "f5T", "f1V",  "f2V", "f3V","f4V", "f5V", "avgT", "avgV")
View(fulldataset)
View(fulldataset)
basename="grid_coarse"
index = 7
errname="mee"
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5))
fulldataset$avgT <- apply(fulldataset[, 2:4], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 5:7], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:4], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 5:7], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f1V",  "f2V", "f3V", "avgT", "avgV")
View(fulldataset)
View(fulldataset)
errname="mee"
index = 7
basename="grid_finer"
trainMSE <- data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_train_", index,".csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste("plots/cup/", basename, "_", errname, "_val_", index,".csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(trainMSE, V1 == 1, select=c(V2, V3)),
subset(trainMSE, V1 == 2, select=c(V2, V3)),
subset(trainMSE, V1 == 3, select=c(V2, V3)),
subset(trainMSE, V1 == 4, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 1, select=c(V2, V3)),
subset(valMSE, V1 == 2, select=c(V2, V3)),
subset(valMSE, V1 == 3, select=c(V2, V3)),
subset(valMSE, V1 == 4, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2, V3.3, V3.4, V3.5, V3.6, V3.7, V3.8, V3.9))
fulldataset$avgT <- apply(fulldataset[, 2:6], 1, mean)
fulldataset$avgV <- apply(fulldataset[, 7:9], 1, mean)
fulldataset$sdT <- apply(fulldataset[, 2:6], 1, sd)
fulldataset$sdV <- apply(fulldataset[, 7:9], 1, sd)
names(fulldataset) <- c("epoch", "f1T", "f2T", "f3T", "f4T", "f5T", "f1V",  "f2V", "f3V","f4V", "f5V", "avgT", "avgV")
View(fulldataset)
plotMonk <- function(basename, errname) {
trainMSE <- data.frame(read.csv(paste(basename, "_", errname, "_train.csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste(basename, "_", errname, "_test.csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1, V3.2))
names(fulldataset) <- c("epoch", "f1Ts", "f1Te")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1Ts), color="red", linetype="solid", size = 1, alpha=0.8) +
geom_line(data=fulldataset, aes(x=epoch, y=f1Te), color="blue", linetype="dashed", size = 1, alpha=0.8) +
xlab('# epoch') + ylab(toupper(errname))
}
# Plot MONK's data
p1 <- plotMonk("/home/caos/Master/ML/report/plots/monk1/monk1_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/report/plots/monk1/monk1_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk_batch_1.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/report/plots/monk1/monk1_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/report/plots/monk1/monk1_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk_batch_1.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk_batch_1.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
plotMonk <- function(basename, errname) {
trainMSE <- data.frame(read.csv(paste(basename, "_", errname, "_train.csv", sep=""), header=FALSE))
valMSE <-  data.frame(read.csv(paste(basename, "_", errname, "_test.csv", sep=""), header=FALSE))
epochs <- 0:max(trainMSE$V2, na.rm = TRUE)
fulldataset <- data.frame(epochs,
subset(trainMSE, V1 == 0, select=c(V2, V3)),
subset(valMSE, V1 == 0, select=c(V2, V3)))
fulldataset <- subset(fulldataset, select=c(epochs, V3, V3.1))
names(fulldataset) <- c("epoch", "f1Ts", "f1Te")
ggplot() +
geom_line(data=fulldataset, aes(x=epoch, y=f1Ts), color="red", linetype="solid", size = 1, alpha=0.8) +
geom_line(data=fulldataset, aes(x=epoch, y=f1Te), color="blue", linetype="dashed", size = 1, alpha=0.8) +
xlab('# epoch') + ylab(toupper(errname))
}
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk1_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# ONLINE
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk1_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk2_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# Plot MONK's data
# ONLINE
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk1_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk2_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# BATCH (NO REG)
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk1_batch.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk2_batch.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_batch.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# BATCH (REG)
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_reg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_reg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_batchreg.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# Plot MONK's data
# ONLINE
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk1_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk2_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_online", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_online", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_online.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# BATCH (NO REG)
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk1/monk1_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk1_batch.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk2/monk2_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk2_batch.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_noreg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_noreg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_batch.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
# BATCH (REG)
p1 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_reg", "mse")
p2 <- plotMonk("/home/caos/Master/ML/Prj/NeuralNetworksSimulator/plots/monk3/monk3_batch_reg", "acc")
pdf("/home/caos/Master/ML/report/plots/monk/monk3_batchreg.pdf", width = 16, height = 8)
grid.arrange(p1, p2, ncol=2)
dev.off()
